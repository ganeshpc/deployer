services:
  api-server:
    build: 
      context: ./api-server
      dockerfile: Dockerfile
      target: base
    ports:
      - "9000:9000"
    volumes:
      - ./api-server:/workdir/app
      - /workdir/app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:password@api-server-db/deployer
    command: sh -c "npm ci && npx prisma migrate dev && npx prisma generate && npm run start:dev"

  s3-reverse-proxy:
    build: 
      context: ./s3-reverse-proxy
      dockerfile: Dockerfile
      target: base
    ports:
      - 8000:8000
    volumes:
      - ./s3-reverse-proxy:/workdir/app
      - /workdir/app/node_modules
    command: sh -c "npm ci && npm run start:dev"

  fronted:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      target: base
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/workdir/app
      - /workdir/app/node_modules
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev"

  api-server-db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"